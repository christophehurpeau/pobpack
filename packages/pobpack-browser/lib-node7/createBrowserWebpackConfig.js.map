{"version":3,"sources":["../src/createBrowserWebpackConfig.js"],"names":["MODERN","ALL","TARGETS","target","options","devtool","env","cache","hmr","watchOptions","ignored","node","fs","module","resolveLoader","modules","resolveLoaderModules","resolve","filter","Boolean","babel","presets","require","plugins","entry","entries","reduce","key","path","join","paths","src","output","build","devtoolModuleFilenameTemplate"],"mappings":";;;;;;;AAAA;;;;AACA;;AAMA;;;;;;AAIO,MAAMA,0BAAS,QAAf;AACA,MAAMC,oBAAM,KAAZ;AACA,MAAMC,4BAAU,CAACD,GAAD,EAAMD,MAAN,CAAhB;;kBAESG,MAAD,IAAgCC,OAAD,KAA2B;AACvE;AACAD,UAAQ,KAF+D;;AAIvE;AACAE,WAASD,QAAQE,GAAR,KAAgB,YAAhB,GAA+B,sBAA/B,GAAwD,YALM;;AAOvE;AACAC,SAAOH,QAAQI,GARwD;;AAUvE;AACAC,gBAAc;AACZC,aAAS;AADG,GAXyD;;AAevE;AACA;AACA;AACAC,QAAM;AACJC,QAAI,OADA;AAEJC,YAAQ;AAFJ,GAlBiE;;AAuBvEC,iBAAe;AACbC,aAASX,QAAQY,oBAAR;AADI,GAvBwD;;AA2BvEC,WAAS,uCAAoB,CAACd,WAAWH,MAAX,IAAqB,iBAAtB,EAAyC,SAAzC,EAAoDkB,MAApD,CAA2DC,OAA3D,CAApB,oBACJf,OADI;AAEPgB;AACEC,eAAS,CAACC,QAAQL,OAAR,CAAgB,SAAhB,CAAD;AADX,OAEKb,QAAQgB,KAFb;AAGEG,eAAS,CACPnB,QAAQI,GAAR,mBADO,EAEP,IAAIJ,QAAQgB,KAAR,CAAcG,OAAd,MAAJ,CAFO,EAGPL,MAHO,CAGAC,OAHA;AAHX;AAFO,KA3B8D;;AAuCvEK,SAAOpB,QAAQqB,OAAR,CAAgBC,MAAhB,CACL,CAACD,OAAD,EAAUD,KAAV,KAAoB;AAClB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,QAAQ,EAAEG,KAAKH,KAAP,EAAcI,MAAMJ,KAApB,EAAR;AAC/BC,YAAQD,MAAMG,GAAd,IAAqB,CACnBxB,WAAWH,MAAX,IAAqBsB,QAAQL,OAAR,CAAgB,2BAAhB,CADF;AAEnB;AACAb,YAAQI,GAAR,IAAec,QAAQL,OAAR,CAAgB,wBAAhB,CAHI,EAInBb,QAAQI,GAAR,IAAec,QAAQL,OAAR,CAAgB,qCAAhB,CAJI,EAKnB,eAAKY,IAAL,CAAU,eAAKZ,OAAL,CAAab,QAAQ0B,KAAR,CAAcC,GAA3B,CAAV,EAA2CP,MAAMI,IAAjD,CALmB,EAMnBV,MANmB,CAMZC,OANY,CAArB;AAOA,WAAOM,OAAP;AACD,GAXI,KAvCgE;;AAsDvEO,UAAQ;AACNJ,UAAM,eAAKX,OAAL,CAAab,QAAQ0B,KAAR,CAAcG,KAA3B,CADA;AAENC,mCAA+B;AAFzB,GAtD+D;;AA2DvErB,UAAQ,sCAAmBT,OAAnB,CA3D+D;;AA6DvEmB,WAAS,uCAAoBnB,OAApB;AA7D8D,CAA3B,C","file":"createBrowserWebpackConfig.js","sourcesContent":["import path from 'path';\nimport {\n  createModuleConfig,\n  createPluginsConfig,\n  createResolveConfig,\n  type OptionsType,\n} from 'pobpack-utils/src';\nimport hotLoaderBabelPlugin from 'react-hot-loader/babel';\n\ntype BrowserTargetType = 'modern' | 'all';\n\nexport const MODERN = 'modern';\nexport const ALL = 'all';\nexport const TARGETS = [ALL, MODERN];\n\nexport default (target: BrowserTargetType) => (options: OptionsType) => ({\n  // Target web\n  target: 'web',\n\n  // get right stack traces\n  devtool: options.env === 'production' ? 'nosources-source-map' : 'source-map',\n\n  // use cache\n  cache: options.hmr,\n\n  // don't watch node_modules (improve cpu and memory usage)\n  watchOptions: {\n    ignored: /node_modules/,\n  },\n\n  // Some libraries import Node modules but don't use them in the browser.\n  // Tell Webpack to provide empty mocks for them so importing them works.\n  // fs and module are used by source-map-support\n  node: {\n    fs: 'empty',\n    module: 'empty',\n  },\n\n  resolveLoader: {\n    modules: options.resolveLoaderModules || ['node_modules'],\n  },\n\n  resolve: createResolveConfig([target === MODERN && 'modern-browsers', 'browser'].filter(Boolean), {\n    ...options,\n    babel: {\n      presets: [require.resolve('./babel')],\n      ...options.babel,\n      plugins: [\n        options.hmr && hotLoaderBabelPlugin,\n        ...(options.babel.plugins || []),\n      ].filter(Boolean),\n    },\n  }),\n\n  entry: options.entries.reduce(\n    (entries, entry) => {\n      if (typeof entry === 'string') entry = { key: entry, path: entry };\n      entries[entry.key] = [\n        target !== MODERN && require.resolve('babel-regenerator-runtime'),\n        // options.env !== 'production' && require.resolve('./source-map-support'),\n        options.hmr && require.resolve('react-hot-loader/patch'),\n        options.hmr && require.resolve('react-dev-utils/webpackHotDevClient'),\n        path.join(path.resolve(options.paths.src), entry.path),\n      ].filter(Boolean);\n      return entries;\n    },\n    {},\n  ),\n\n  output: {\n    path: path.resolve(options.paths.build),\n    devtoolModuleFilenameTemplate: 'file://[absolute-resource-path]',\n  },\n\n  module: createModuleConfig(options),\n\n  plugins: createPluginsConfig(options),\n});\n"]}