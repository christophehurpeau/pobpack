{"version":3,"sources":["../src/createBrowserWebpackConfig.js"],"names":["MODERN","ALL","TARGETS","target","options","devtool","env","cache","hmr","devServer","watchOptions","ignored","node","fs","module","resolveLoader","modules","resolveLoaderModules","resolve","filter","Boolean","babel","presets","require","plugins","entry","entries","reduce","key","path","join","paths","src","output","build","devtoolModuleFilenameTemplate"],"mappings":";;;;;;;AAAA;;;;AACA;;AAMA;;;;;;;;;;;;AAEA,0EAAyB,oEAAW,mCAAX,CAAzB;;AAEO,MAAMA,0BAAS,QAAf;AACA,MAAMC,oBAAM,KAAZ;AACA,MAAMC,4BAAU,CAACD,GAAD,EAAMD,MAAN,CAAhB;;kBAEQ,oCAACG,MAAD;AAAA,wCAAO,iBAAP;;AAAA,SAAgCC,OAAD;AAAA,uBAAQ,sCAAR;;AAAA;;AAAA,WAA2B;AACvE;AACAD,cAAQ,KAF+D;;AAIvE;AACAE,eAASD,QAAQE,GAAR,KAAgB,YAAhB,GAA+B,sBAA/B,GAAwD,YALM;;AAOvE;AACAC,aAAOH,QAAQI,GARwD;;AAUvEC,iBAAW;AACT;AACAC,sBAAc;AACZC,mBAAS;AADG;AAFL,OAV4D;;AAiBvE;AACA;AACA;AACAC,YAAM;AACJC,YAAI,OADA;AAEJC,gBAAQ;AAFJ,OApBiE;;AAyBvEC,qBAAe;AACbC,iBAASZ,QAAQa,oBAAR;AADI,OAzBwD;;AA6BvEC,eAAS,uCAAoB,CAACf,WAAWH,MAAX,IAAqB,iBAAtB,EAAyC,SAAzC,EAAoDmB,MAApD,CAA2DC,OAA3D,CAApB,oBACJhB,OADI;AAEPiB;AACEC,mBAAS,CAACC,QAAQL,OAAR,CAAgB,SAAhB,CAAD;AADX,WAEKd,QAAQiB,KAFb;AAGEG,mBAAS,CACPpB,QAAQI,GAAR,mBADO,EAEP,IAAIJ,QAAQiB,KAAR,CAAcG,OAAd,MAAJ,CAFO,EAGPL,MAHO,CAGAC,OAHA;AAHX;AAFO,SA7B8D;;AAyCvEK,aAAOrB,QAAQsB,OAAR,CAAgBC,MAAhB,CACL,CAACD,OAAD,EAAUD,KAAV,KAAoB;AAClB,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,QAAQ,EAAEG,KAAKH,KAAP,EAAcI,MAAMJ,KAApB,EAAR;AAC/BC,gBAAQD,MAAMG,GAAd,IAAqB,CACnBzB,WAAWH,MAAX,IAAqBuB,QAAQL,OAAR,CAAgB,2BAAhB,CADF;AAEnB;AACAd,gBAAQI,GAAR,IAAee,QAAQL,OAAR,CAAgB,wBAAhB,CAHI,EAInBd,QAAQI,GAAR,IAAee,QAAQL,OAAR,CAAgB,qCAAhB,CAJI,EAKnB,eAAKY,IAAL,CAAU,eAAKZ,OAAL,CAAad,QAAQ2B,KAAR,CAAcC,GAA3B,CAAV,EAA2CP,MAAMI,IAAjD,CALmB,EAMnBV,MANmB,CAMZC,OANY,CAArB;AAOA,eAAOM,OAAP;AACD,OAXI,KAzCgE;;AAwDvEO,cAAQ;AACNJ,cAAM,eAAKX,OAAL,CAAad,QAAQ2B,KAAR,CAAcG,KAA3B,CADA;AAENC,uCAA+B;AAFzB,OAxD+D;;AA6DvErB,cAAQ,sCAAmBV,OAAnB,CA7D+D;;AA+DvEoB,eAAS,uCAAoBpB,OAApB;AA/D8D,KAA3B;AAAA,GAA/B;AAAA,C","file":"createBrowserWebpackConfig.js","sourcesContent":["import path from 'path';\nimport {\n  createModuleConfig,\n  createPluginsConfig,\n  createResolveConfig,\n  type OptionsType,\n} from 'pobpack-utils/src';\nimport hotLoaderBabelPlugin from 'react-hot-loader/babel';\n\ntype BrowserTargetType = 'modern' | 'all';\n\nexport const MODERN = 'modern';\nexport const ALL = 'all';\nexport const TARGETS = [ALL, MODERN];\n\nexport default (target: BrowserTargetType) => (options: OptionsType) => ({\n  // Target web\n  target: 'web',\n\n  // get right stack traces\n  devtool: options.env === 'production' ? 'nosources-source-map' : 'source-map',\n\n  // use cache\n  cache: options.hmr,\n\n  devServer: {\n    // don't watch node_modules (improve cpu and memory usage)\n    watchOptions: {\n      ignored: /node_modules/,\n    },\n  },\n\n  // Some libraries import Node modules but don't use them in the browser.\n  // Tell Webpack to provide empty mocks for them so importing them works.\n  // fs and module are used by source-map-support\n  node: {\n    fs: 'empty',\n    module: 'empty',\n  },\n\n  resolveLoader: {\n    modules: options.resolveLoaderModules || ['node_modules'],\n  },\n\n  resolve: createResolveConfig([target === MODERN && 'modern-browsers', 'browser'].filter(Boolean), {\n    ...options,\n    babel: {\n      presets: [require.resolve('./babel')],\n      ...options.babel,\n      plugins: [\n        options.hmr && hotLoaderBabelPlugin,\n        ...(options.babel.plugins || []),\n      ].filter(Boolean),\n    },\n  }),\n\n  entry: options.entries.reduce(\n    (entries, entry) => {\n      if (typeof entry === 'string') entry = { key: entry, path: entry };\n      entries[entry.key] = [\n        target !== MODERN && require.resolve('babel-regenerator-runtime'),\n        // options.env !== 'production' && require.resolve('./source-map-support'),\n        options.hmr && require.resolve('react-hot-loader/patch'),\n        options.hmr && require.resolve('react-dev-utils/webpackHotDevClient'),\n        path.join(path.resolve(options.paths.src), entry.path),\n      ].filter(Boolean);\n      return entries;\n    },\n    {},\n  ),\n\n  output: {\n    path: path.resolve(options.paths.build),\n    devtoolModuleFilenameTemplate: 'file://[absolute-resource-path]',\n  },\n\n  module: createModuleConfig(options),\n\n  plugins: createPluginsConfig(options),\n});\n"]}