{"version":3,"sources":["../src/createOptions.js"],"names":["options","env","process","NODE_ENV","hmr","babel","jsLoaders","moduleRules","plugins","prependPlugins","paths","src","build"],"mappings":";;;;;;;;kBAgBgBA,OAAD,KAAmC;AAChDC,OAAKD,QAAQC,GAAR,IAAeC,QAAQD,GAAR,CAAYE,QADgB;AAEhDC,OAAKJ,QAAQI,GAFmC;AAGhDC,SAAOL,QAAQK,KAHiC;AAIhDC,aAAWN,QAAQM,SAJ6B;AAKhDC,eAAaP,QAAQO,WAL2B;AAMhDC,WAASR,QAAQQ,OAN+B;AAOhDC,kBAAgBT,QAAQS,cAPwB;AAQhDC,oBAASC,KAAK,KAAd,EAAqBC,OAAO,OAA5B,IAAwCZ,QAAQU,KAAhD;AARgD,CAAnC,C","file":"createOptions.js","sourcesContent":["type ConfigPathsType = {|\n  src: string,\n  build: string,\n|};\n\nexport type OptionsType = {\n  env: ?string,\n  hmr: boolean,\n  babel: ?Object,\n  jsLoaders: ?Array<any>,\n  moduleRules: ?Array<any>,\n  prependPlugins: ?Array<any>,\n  plugins: ?Array<any>,\n  paths: ConfigPathsType,\n}\n\nexport default (options: Object): OptionsType => ({\n  env: options.env || process.env.NODE_ENV,\n  hmr: options.hmr,\n  babel: options.babel,\n  jsLoaders: options.jsLoaders,\n  moduleRules: options.moduleRules,\n  plugins: options.plugins,\n  prependPlugins: options.prependPlugins,\n  paths: { src: 'src', build: 'build', ...options.paths },\n});\n"]}