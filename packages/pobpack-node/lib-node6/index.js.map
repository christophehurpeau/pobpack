{"version":3,"sources":["../src/index.js"],"names":["buildThrowOnError","stats","hasErrors","Error","toString","hash","timings","chunks","chunkModules","modules","children","version","cached","cachedAssets","reasons","source","errorDetails","colors","process","stdout","isTTY","createCompiler","webpackConfig","compiler","bar","yellow","bold","incomplete","complete","total","clear","stream","apply","percentage","msg","update","length","substr","clearConsole","clean","output","path","run","done","then","watch","callback","err","createAppCompiler","options","build","hmr","undefined","watchAndRunCompiler","daemon","key","displayName","args","autorestart","start","on","stop","sendSIGUSR2","restart","watchAndRun"],"mappings":"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","file":"index.js","sourcesContent":["import { execSync } from 'child_process';\nimport { join } from 'path';\nimport chalk from 'chalk';\nimport promiseCallback from 'promise-callback-factory/src';\nimport ProgressBar from 'progress';\nimport webpack from 'webpack';\nimport ProgressPlugin from 'webpack/lib/ProgressPlugin';\nimport FriendlyErrorsWebpackPlugin from 'friendly-errors-webpack-plugin';\nimport createDaemon from 'springbokjs-daemon/src';\nimport createAppWebpackConfig from './createAppWebpackConfig';\n\nconst buildThrowOnError = (stats) => {\n  if (!stats.hasErrors()) {\n    return stats;\n  }\n\n  throw new Error(stats.toString({\n    hash: false,\n    timings: false,\n    chunks: false,\n    chunkModules: false,\n    modules: false,\n    children: true,\n    version: true,\n    cached: false,\n    cachedAssets: false,\n    reasons: false,\n    source: false,\n    errorDetails: false,\n    colors: process.stdout.isTTY,\n  }));\n};\n\nexport const createCompiler = (webpackConfig) => {\n  const compiler = webpack(webpackConfig);\n\n  if (process.stdout.isTTY) {\n    const bar = new ProgressBar(\n      `${chalk.yellow.bold('Building node bundle...')} ${chalk.bold(':percent')} [:bar] → :msg`,\n      { incomplete: ' ', complete: '▇', total: 50, clear: true, stream: process.stdout },\n    );\n    compiler.apply(new ProgressPlugin((percentage, msg) => {\n      bar.update(percentage, { msg: msg.length > 20 ? `${msg.substr(0, 20)}...` : msg });\n    }));\n    // human-readable error messages\n    compiler.apply(new FriendlyErrorsWebpackPlugin({\n      clearConsole: false,\n    }));\n  }\n\n  return {\n    webpackConfig,\n    clean: () => webpackConfig.output.path && execSync(`rm -Rf ${webpackConfig.output.path}`),\n    run: () => promiseCallback(done => compiler.run(done)).then(buildThrowOnError),\n    watch: (callback) => compiler.watch({}, (err, stats) => {\n      if (err) return;\n      if (stats.hasErrors()) return;\n      buildThrowOnError(stats);\n      callback(stats);\n    }),\n  };\n};\n\nexport const createAppCompiler = options => (\n  createCompiler(createAppWebpackConfig(options))\n);\n\nexport const build = (options = {}) => {\n  const compiler = createAppCompiler({ ...options, hmr: false });\n  compiler.clean();\n  return compiler.run();\n};\n\nexport const watch = (options, callback) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  const compiler = createAppCompiler({ ...options, hmr: true });\n  compiler.clean();\n  compiler.watch(callback);\n  return compiler;\n};\n\nexport const watchAndRunCompiler = (compiler, options = {}) => {\n  let daemon;\n  compiler.watch((stats) => {\n    if (!daemon) {\n      daemon = createDaemon({\n        key: options.key || 'pobpack-node',\n        displayName: options.displayName,\n        args: [\n          join(compiler.webpackConfig.output.path),\n          ...options.args,\n        ],\n        autorestart: true,\n      });\n      daemon.start();\n      process.on('exit', () => daemon.stop());\n    } else {\n      // already started, send a signal to ask hot reload\n      try {\n        daemon.sendSIGUSR2();\n      } catch (err) {\n        daemon.restart();\n      }\n    }\n  });\n};\n\nexport const watchAndRun = (options) => {\n  const compiler = createAppCompiler({ ...options, hmr: true });\n  compiler.clean();\n  watchAndRunCompiler(compiler);\n  return compiler;\n};\n"]}