{"version":3,"sources":["../src/createNodeWebpackConfig.js"],"names":["options","target","devtool","externals","whitelist","require","resolve","includeModules","map","module","RegExp","node","__filename","__dirname","cache","hmr","performance","hints","resolveLoader","modules","resolveLoaderModules","babel","presets","entry","entries","reduce","key","path","join","paths","src","filter","Boolean","output","build","libraryTarget","plugins","BannerPlugin","banner","raw","entryOnly","include"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;kBAQgBA,OAAD,KAA2B;AACxC;AACAC,UAAQ,MAFgC;;AAIxC;AACAC,WAAS,YAL+B;;AAOxC;AACAC,aAAW,oCAAc;AACvBC,eAAW,CACTC,QAAQC,OAAR,CAAgB,QAAhB,CADS,EAET,GAAGN,QAAQO,cAAR,CAAuBC,GAAvB,CAA2BC,UAAU,IAAIC,MAAJ,CAAY,IAAGD,MAAO,OAAtB,CAArC,CAFM;AADY,GAAd,CAR6B;;AAexC;AACAE,QAAM;AACJC,gBAAY,IADR;AAEJC,eAAW;AAFP,GAhBkC;;AAqBxC;AACAC,SAAOd,QAAQe,GAtByB;;AAwBxC;AACAC,eAAa;AACXC,WAAO;AADI,GAzB2B;;AA6BxCC,iBAAe;AACbC,aAASnB,QAAQoB,oBAAR;AADI,GA7ByB;;AAiCxCd,WAAS,mEACJN,OADI;AAEPqB;AACEC,eAAS,CAACjB,QAAQC,OAAR,CAAgB,SAAhB,CAAD;AADX,OAEKN,QAAQqB,KAFb;AAFO,KAjC+B;;AAyCxCE,SAAOvB,QAAQwB,OAAR,CAAgBC,MAAhB,CACL,CAACD,OAAD,EAAUD,KAAV,KAAoB;AAClB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,QAAQ,EAAEG,KAAKH,KAAP,EAAcI,MAAMJ,KAApB,EAAR;AAC/BC,YAAQD,MAAMG,GAAd,IAAqB,CACnB1B,QAAQe,GAAR,IAAeV,QAAQC,OAAR,CAAgB,QAAhB,CADI,EAEnB,eAAKsB,IAAL,CAAU,eAAKtB,OAAL,CAAaN,QAAQ6B,KAAR,CAAcC,GAA3B,CAAV,EAA2CP,MAAMI,IAAjD,CAFmB,EAGnBI,MAHmB,CAGZC,OAHY,CAArB;AAIA,WAAOR,OAAP;AACD,GARI,KAzCiC;;AAqDxCS,UAAQ;AACNN,UAAM,eAAKrB,OAAL,CAAaN,QAAQ6B,KAAR,CAAcK,KAA3B,CADA;AAENC,mBAAe;AAFT,GArDgC;;AA0DxC1B,UAAQ,sCAAmBT,OAAnB,CA1DgC;;AA4DxCoC,WAAS,yDACJpC,OADI;AAEPoC,aAAS,CACPpC,QAAQe,GAAR,IAAe,IAAI,sBAAQsB,YAAZ,CAAyB;AACtCC,cAAS,YAAWjC,QAAQC,OAAR,CAAgB,sBAAhB,CAAwC,KADtB;AAEtCiC,WAAK,IAFiC;AAGtCC,iBAAW,KAH2B;AAItCC,eAAS;AAJ6B,KAAzB,CADR,EAOP,GAAGzC,QAAQoC,OAPJ;AAFF;AA5D+B,CAA3B,C,EAXf","file":"createNodeWebpackConfig.js","sourcesContent":["// const fs = require('fs');\nimport path from 'path';\nimport nodeExternals from 'webpack-node-externals';\nimport {\n  webpack,\n  createModuleConfig,\n  createPluginsConfig,\n  createResolveConfig,\n  type OptionsType,\n} from 'pobpack-utils/src';\n\nexport default (options: OptionsType) => ({\n  // Target node\n  target: 'node',\n\n  // get right stack traces\n  devtool: 'source-map',\n\n  // don't bundle node_modules dependencies\n  externals: nodeExternals({\n    whitelist: [\n      require.resolve('../hot'),\n      ...options.includeModules.map(module => new RegExp(`^${module}(/|$)`)),\n    ],\n  }),\n\n  // __dirname and __filename\n  node: {\n    __filename: true,\n    __dirname: true,\n  },\n\n  // use cache\n  cache: options.hmr,\n\n  // bundle size is not relevant for node\n  performance: {\n    hints: false,\n  },\n\n  resolveLoader: {\n    modules: options.resolveLoaderModules || ['node_modules'],\n  },\n\n  resolve: createResolveConfig(['node'], {\n    ...options,\n    babel: {\n      presets: [require.resolve('./babel')],\n      ...options.babel,\n    },\n  }),\n\n  entry: options.entries.reduce(\n    (entries, entry) => {\n      if (typeof entry === 'string') entry = { key: entry, path: entry };\n      entries[entry.key] = [\n        options.hmr && require.resolve('../hot'),\n        path.join(path.resolve(options.paths.src), entry.path),\n      ].filter(Boolean);\n      return entries;\n    },\n    {},\n  ),\n\n  output: {\n    path: path.resolve(options.paths.build),\n    libraryTarget: 'commonjs2',\n  },\n\n  module: createModuleConfig(options),\n\n  plugins: createPluginsConfig({\n    ...options,\n    plugins: [\n      options.hmr && new webpack.BannerPlugin({\n        banner: `require(\"${require.resolve('./source-map-support')}\");`,\n        raw: true,\n        entryOnly: false,\n        include: /\\.js$/,\n      }),\n      ...options.plugins,\n    ],\n  }),\n});\n"]}