{"version":3,"sources":["../src/createWebpackConfig.js"],"names":["options","env","hmr","production","mainBabelOptions","babelrc","cacheDirectory","presets","require","resolve","babel","target","externals","whitelist","cache","performance","hints","resolveLoader","modules","extensions","mainFields","filter","Boolean","aliasFields","entry","index","paths","src","output","path","build","filename","sourceMapFilename","publicPath","libraryTarget","module","rules","test","loader","exclude","loaders","jsLoaders","moduleRules","plugins","prependPlugins","DefinePlugin","JSON","stringify","SourceMapDevToolPlugin","NoEmitOnErrorsPlugin","HotModuleReplacementPlugin","NamedModulesPlugin","BannerPlugin","banner","raw","entryOnly","include"],"mappings":";;;;;;kQAAA;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEgBA,OAAD,IAA0B;AACvCA,YAAU,6BAAcA,OAAd,CAAV;AACA,QAAMC,MAAMD,QAAQC,GAApB;AACA,QAAMC,MAAMF,QAAQE,GAApB;AACA,QAAMC,aAAaF,QAAQ,YAA3B;;AAEA,QAAMG;AACJC,aAAS,KADL;AAEJC,oBAAgBJ,GAFZ;AAGJK,aAAS,CACPC,QAAQC,OAAR,CAAgB,SAAhB,CADO;AAHL,KAMDT,QAAQU,KANP,CAAN;;AASA,SAAO;AACL;AACAC,YAAQ,MAFH;AAGL;AACAC,eAAW,oCAAc;AACvBC;AADuB,KAAd,CAJN;AAOL;AACAC,WAAOZ,GARF;AASL;AACAa,iBAAa;AACXC,aAAO;AADI,KAVR;AAaLC,mBAAe;AACbC;AADa,KAbV;AAgBLT,aAAS;AACPS,+BADO;AAEPC,iCAFO;AAGPC,kBAAY,CACV,CAACjB,UAAD,IAAe,kBADL,EAEV,cAFU,EAGV,CAACA,UAAD,IAAe,UAHL,EAIV,MAJU,EAKVkB,MALU,CAKHC,OALG,CAHL;AASPC,mBAAa,CACX,CAACpB,UAAD,IAAe,0BADJ,EAEX,sBAFW,EAGX,SAHW,EAIXkB,MAJW,CAIJC,OAJI;AATN,KAhBJ;AA+BLE,WAAO;AACLC,aAAO,CACLvB,OAAO,kBADF,EAEJ,GAAE,eAAKO,OAAL,CAAaT,QAAQ0B,KAAR,CAAcC,GAA3B,CAAgC,WAF9B,EAGLN,MAHK,CAGEC,OAHF;AADF,KA/BF;AAqCLM,YAAQ;AACNC,YAAM,eAAKpB,OAAL,CAAaT,QAAQ0B,KAAR,CAAcI,KAA3B,CADA;AAENC,gBAAU,WAFJ;AAGNC,yBAAmB,YAHb;AAINC,kBAAY,GAJN;AAKNC,qBAAe;AALT,KArCH;;AA6CLC,YAAQ;AACNC,aAAO,CACL;AACEC,cAAM,SADR;AAEEC,gBAAQ;AAFV,OADK,EAKL;AACED,cAAM,aADR;AAEEE,iBAAS,CACP,cADO,EAEPvC,QAAQ0B,KAAR,CAAcI,KAFP,CAFX;AAMEU,iBAAS,CACP,EAAEF,QAAQ,cAAV,EAA0BtC,SAASI,gBAAnC,EADO,EAEP,IAAIJ,QAAQyC,SAAR,MAAJ,CAFO;AANX,OALK,EAgBL,IAAIzC,QAAQ0C,WAAR,MAAJ,CAhBK;AADD,KA7CH;;AAkELC,aAAS,CACP,IAAI3C,QAAQ4C,cAAR,MAAJ,CADO,EAEP,IAAI,kBAAQC,YAAZ;AACE,8BAAwBC,KAAKC,SAAL,CAAe9C,GAAf;AAD1B,OAEME;AAAA;AAAA,UAFN,EAFO;;AAOP;AACA,QAAI,kBAAQ6C,sBAAZ,CAAmC;AACjCX,YAAM,SAD2B;AAEjCN,gBAAU;AAFuB,KAAnC,CARO,EAaP,IAAI,kBAAQkB,oBAAZ,EAbO,EAeP/C,OAAO,IAAI,kBAAQgD,0BAAZ,EAfA,EAgBPhD,OAAO,IAAI,kBAAQiD,kBAAZ,EAhBA,EAiBPjD,OAAO,IAAI,kBAAQkD,YAAZ,CAAyB;AAC9BC,cAAQ,8EADsB;AAE9BC,WAAK,IAFyB;AAG9BC,iBAAW,KAHmB;AAI9BC,eAAS;AAJqB,KAAzB,CAjBA,EAuBP,IAAIxD,QAAQ2C,OAAR,MAAJ,CAvBO,EAwBPtB,MAxBO,CAwBAC,OAxBA;AAlEJ,GAAP;AA4FD,C","file":"createWebpackConfig.js","sourcesContent":["// const fs = require('fs');\nimport path from 'path';\nimport webpack from 'webpack';\nimport nodeExternals from 'webpack-node-externals';\nimport createOptions, { type OptionsType } from './createOptions';\n\nexport default (options: OptionsType) => {\n  options = createOptions(options);\n  const env = options.env;\n  const hmr = options.hmr;\n  const production = env === 'production';\n\n  const mainBabelOptions = {\n    babelrc: false,\n    cacheDirectory: hmr,\n    presets: [\n      require.resolve('./babel'),\n    ],\n    ...options.babel,\n  };\n\n  return {\n    // Target node\n    target: 'node',\n    // don't bundle node_modules dependencies\n    externals: nodeExternals({\n      whitelist: ['pobpack-node/hot'],\n    }),\n    // use cache\n    cache: hmr,\n    // bundle size is not relevant for node\n    performance: {\n      hints: false,\n    },\n    resolveLoader: {\n      modules: ['node_modules'],\n    },\n    resolve: {\n      modules: ['node_modules'],\n      extensions: ['.js', '.jsx'],\n      mainFields: [\n        !production && 'webpack:main-dev',\n        'webpack:main',\n        !production && 'main-dev',\n        'main',\n      ].filter(Boolean),\n      aliasFields: [\n        !production && 'webpack:node-aliases-dev',\n        'webpack:node-aliases',\n        'webpack',\n      ].filter(Boolean),\n    },\n    entry: {\n      index: [\n        hmr && 'pobpack-node/hot',\n        `${path.resolve(options.paths.src)}/index.js`,\n      ].filter(Boolean),\n    },\n    output: {\n      path: path.resolve(options.paths.build),\n      filename: '[name].js',\n      sourceMapFilename: '[name].map',\n      publicPath: '/',\n      libraryTarget: 'commonjs2',\n    },\n\n    module: {\n      rules: [\n        {\n          test: /\\.json$/,\n          loader: 'json-loader',\n        },\n        {\n          test: /\\.(js|jsx)$/,\n          exclude: [\n            /node_modules/,\n            options.paths.build,\n          ],\n          loaders: [\n            { loader: 'babel-loader', options: mainBabelOptions },\n            ...(options.jsLoaders || []),\n          ],\n        },\n        ...(options.moduleRules || []),\n      ],\n    },\n\n    plugins: [\n      ...(options.prependPlugins || []),\n      new webpack.DefinePlugin({\n        'process.env.NODE_ENV': JSON.stringify(env),\n        ...(production ? { 'module.hot': false } : {}),\n      }),\n\n      // get right stack traces\n      new webpack.SourceMapDevToolPlugin({\n        test: /\\.jsx?$/,\n        filename: '[name].js.map',\n      }),\n\n      new webpack.NoEmitOnErrorsPlugin(),\n\n      hmr && new webpack.HotModuleReplacementPlugin(),\n      hmr && new webpack.NamedModulesPlugin(),\n      hmr && new webpack.BannerPlugin({\n        banner: 'require(\"pobpack-node/source-map-support\").install({ environment: \"node\" });',\n        raw: true,\n        entryOnly: false,\n        include: /\\.js$/,\n      }),\n      ...(options.plugins || []),\n    ].filter(Boolean),\n  };\n};\n"]}