{"version":3,"sources":["../src/createAppWebpackConfig.js"],"names":["options","appWebpackConfigPath","resolve","console","log","appWebpackConfigCreator","require","error","config"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;kBAEgBA,OAAD,IAAa;AAC1BA,YAAU,6BAAcA,OAAd,CAAV;AACA,QAAMC,uBAAuB,eAAKC,OAAL,CAAa,2BAAb,CAA7B;AACA,MAAI,oBAAWD,oBAAX,CAAJ,EAAsC;AACpCE,YAAQC,GAAR,CAAY,qCAAZ;AACA;AACA,UAAMC,0BAA0BC,QAAQL,oBAAR,CAAhC;AACA,QAAI,OAAOI,uBAAP,KAAmC,UAAvC,EAAmD;AACjDF,cAAQI,KAAR;AAID;;AAED,UAAMC,SAASH,uDAA6CL,OAA7C,CAAf;;AAEA,QAAI,OAAOQ,MAAP,KAAkB,QAAtB,EAAgC;AAC9BL,cAAQI,KAAR;AAID;;AAED,WAAOC,MAAP;AACD,GArBD,MAqBO;AACL,WAAO,mCAAoBR,OAApB,CAAP;AACD;AACF,C","file":"createAppWebpackConfig.js","sourcesContent":["import path from 'path';\nimport { existsSync } from 'fs';\nimport createWebpackConfig from './createWebpackConfig';\nimport createOptions from './createOptions';\n\nexport default (options) => {\n  options = createOptions(options);\n  const appWebpackConfigPath = path.resolve('createAppWebpackConfig.js');\n  if (existsSync(appWebpackConfigPath)) {\n    console.log('Using app createAppWebpackConfig.js');\n    // eslint-disable-next-line import/no-dynamic-require, global-require\n    const appWebpackConfigCreator = require(appWebpackConfigPath);\n    if (typeof appWebpackConfigCreator !== 'function') {\n      console.error(\n        'app createAppWebpackConfig.js should export a function\\n'\n        + 'module.exports = function (config, options) { ... }'\n      );\n    }\n\n    const config = appWebpackConfigCreator(createWebpackConfig, options);\n\n    if (typeof config !== 'object') {\n      console.error(\n        'app createAppWebpackConfig.js should return the config\\n'\n        + 'function (config, options) { return config; }'\n      );\n    }\n\n    return config;\n  } else {\n    return createWebpackConfig(options);\n  }\n};\n"]}