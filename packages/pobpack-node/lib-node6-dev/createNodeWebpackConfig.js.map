{"version":3,"sources":["../src/createNodeWebpackConfig.js"],"names":["options","bail","env","target","devtool","externals","whitelist","require","resolve","includeModules","map","module","RegExp","node","__filename","__dirname","cache","hmr","performance","hints","resolveLoader","modules","resolveLoaderModules","babel","presets","entry","entries","reduce","key","path","join","paths","src","filter","Boolean","output","build","libraryTarget","devtoolModuleFilenameTemplate","plugins","BannerPlugin","banner","raw","entryOnly","include"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAHA;;;kBAWe,iCAACA,OAAD;AAAA,qBAAQ,sCAAR;;AAAA,+EAA2B;AACxC;AACAC,UAAMD,QAAQE,GAAR,KAAgB,YAFkB;;AAIxC;AACAC,YAAQ,MALgC;;AAOxC;AACAC,aAAS,YAR+B;;AAUxC;AACAC,eAAW,oCAAc;AACvBC,iBAAW,CACTC,QAAQC,OAAR,CAAgB,QAAhB,CADS,EAET,GAAGR,QAAQS,cAAR,CAAuBC,GAAvB,CAA2BC,UAAU,IAAIC,MAAJ,CAAY,IAAGD,MAAO,OAAtB,CAArC,CAFM;AADY,KAAd,CAX6B;;AAkBxC;AACAE,UAAM;AACJC,kBAAY,IADR;AAEJC,iBAAW;AAFP,KAnBkC;;AAwBxC;AACAC,WAAOhB,QAAQiB,GAzByB;;AA2BxC;AACAC,iBAAa;AACXC,aAAO;AADI,KA5B2B;;AAgCxCC,mBAAe;AACbC,eAASrB,QAAQsB,oBAAR;AADI,KAhCyB;;AAoCxCd,aAAS,mEACJR,OADI;AAEPuB;AACEC,iBAAS,CAACjB,QAAQC,OAAR,CAAgB,SAAhB,CAAD;AADX,SAEKR,QAAQuB,KAFb;AAFO,OApC+B;;AA4CxCE,WAAOzB,QAAQ0B,OAAR,CAAgBC,MAAhB,CAAuB,CAACD,OAAD,EAAUD,KAAV,MACxB,OAAOA,KAAP,KAAiB,QADO,KACGA,QAAQ,EAAEG,KAAKH,KAAP,EAAcI,MAAMJ,KAApB,EADX,GAE5BC,QAAQD,MAAMG,GAAd,IAAqB,CACnB5B,QAAQiB,GAAR,IAAeV,QAAQC,OAAR,CAAgB,QAAhB,CADI,EAEnB,eAAKsB,IAAL,CAAU,eAAKtB,OAAL,CAAaR,QAAQ+B,KAAR,CAAcC,GAA3B,CAAV,EAA2CP,MAAMI,IAAjD,CAFmB,EAGnBI,MAHmB,CAGZC,OAHY,CAFO,EAMrBR,OANqB,CAAvB,KA5CiC;;AAqDxCS,YAAQ;AACNN,YAAM,eAAKrB,OAAL,CAAaR,QAAQ+B,KAAR,CAAcK,KAA3B,CADA;AAENC,qBAAe,WAFT;AAGNC,qCAA+B;AAHzB,KArDgC;;AA2DxC3B,YAAQ,sCAAmBX,OAAnB,CA3DgC;;AA6DxCuC,aAAS,yDACJvC,OADI;AAEPuC,eAAS,CACPvC,QAAQiB,GAAR,IACE,IAAI,sBAAQuB,YAAZ,CAAyB;AACvBC,gBAAS,YAAWlC,QAAQC,OAAR,CAAgB,sBAAhB,CAAwC,KADrC;AAEvBkC,aAAK,IAFkB;AAGvBC,mBAAW,KAHY;AAIvBC,iBAAS;AAJc,OAAzB,CAFK,EAQP,GAAG5C,QAAQuC,OARJ;AAFF;AA7D+B,GAA3B;AAAA,C","file":"createNodeWebpackConfig.js","sourcesContent":["// const fs = require('fs');\nimport path from 'path';\nimport nodeExternals from 'webpack-node-externals';\nimport {\n  webpack,\n  createModuleConfig,\n  createPluginsConfig,\n  createResolveConfig,\n  type OptionsType,\n} from 'pobpack-utils/src';\n\nexport default (options: OptionsType) => ({\n  // Don't attempt to continue if there are any errors.\n  bail: options.env === 'production',\n\n  // Target node\n  target: 'node',\n\n  // get right stack traces\n  devtool: 'source-map',\n\n  // don't bundle node_modules dependencies\n  externals: nodeExternals({\n    whitelist: [\n      require.resolve('../hot'),\n      ...options.includeModules.map(module => new RegExp(`^${module}(/|$)`)),\n    ],\n  }),\n\n  // __dirname and __filename\n  node: {\n    __filename: true,\n    __dirname: true,\n  },\n\n  // use cache\n  cache: options.hmr,\n\n  // bundle size is not relevant for node\n  performance: {\n    hints: false,\n  },\n\n  resolveLoader: {\n    modules: options.resolveLoaderModules || ['node_modules'],\n  },\n\n  resolve: createResolveConfig(['node'], {\n    ...options,\n    babel: {\n      presets: [require.resolve('./babel')],\n      ...options.babel,\n    },\n  }),\n\n  entry: options.entries.reduce((entries, entry) => {\n    if (typeof entry === 'string') entry = { key: entry, path: entry };\n    entries[entry.key] = [\n      options.hmr && require.resolve('../hot'),\n      path.join(path.resolve(options.paths.src), entry.path),\n    ].filter(Boolean);\n    return entries;\n  }, {}),\n\n  output: {\n    path: path.resolve(options.paths.build),\n    libraryTarget: 'commonjs2',\n    devtoolModuleFilenameTemplate: '[absolute-resource-path]',\n  },\n\n  module: createModuleConfig(options),\n\n  plugins: createPluginsConfig({\n    ...options,\n    plugins: [\n      options.hmr &&\n        new webpack.BannerPlugin({\n          banner: `require(\"${require.resolve('./source-map-support')}\");`,\n          raw: true,\n          entryOnly: false,\n          include: /\\.js$/,\n        }),\n      ...options.plugins,\n    ],\n  }),\n});\n"]}