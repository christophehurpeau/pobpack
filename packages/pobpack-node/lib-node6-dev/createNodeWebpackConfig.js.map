{"version":3,"sources":["../src/createNodeWebpackConfig.js"],"names":["options","target","externals","whitelist","require","resolve","externalWhitelist","node","__filename","__dirname","cache","hmr","performance","hints","resolveLoader","modules","resolveLoaderModules","babel","presets","entry","entries","reduce","key","path","join","paths","src","filter","Boolean","output","build","libraryTarget","module","plugins","BannerPlugin","banner","raw","entryOnly","include"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAHA;;;kBAWe,iCAACA,OAAD;AAAA,qBAAQ,sCAAR;;AAAA;;AAAA,SAA2B;AACxC;AACAC,YAAQ,MAFgC;;AAIxC;AACAC,eAAW,oCAAc;AACvBC,iBAAW,CAACC,QAAQC,OAAR,CAAgB,QAAhB,CAAD,EAA4B,GAAGL,QAAQM,iBAAvC;AADY,KAAd,CAL6B;;AASxC;AACAC,UAAM;AACJC,kBAAY,IADR;AAEJC,iBAAW;AAFP,KAVkC;;AAexC;AACAC,WAAOV,QAAQW,GAhByB;;AAkBxC;AACAC,iBAAa;AACXC,aAAO;AADI,KAnB2B;;AAuBxCC,mBAAe;AACbC,eAASf,QAAQgB,oBAAR;AADI,KAvByB;;AA2BxCX,aAAS,mEACJL,OADI;AAEPiB;AACEC,iBAAS,CAACd,QAAQC,OAAR,CAAgB,SAAhB,CAAD;AADX,SAEKL,QAAQiB,KAFb;AAFO,OA3B+B;;AAmCxCE,WAAOnB,QAAQoB,OAAR,CAAgBC,MAAhB,CACL,CAACD,OAAD,EAAUD,KAAV,KAAoB;AAClB,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,QAAQ,EAAEG,KAAKH,KAAP,EAAcI,MAAMJ,KAApB,EAAR;AAC/BC,cAAQD,MAAMG,GAAd,IAAqB,CACnBtB,QAAQW,GAAR,IAAeP,QAAQC,OAAR,CAAgB,QAAhB,CADI,EAEnB,eAAKmB,IAAL,CAAU,eAAKnB,OAAL,CAAaL,QAAQyB,KAAR,CAAcC,GAA3B,CAAV,EAA2CP,MAAMI,IAAjD,CAFmB,EAGnBI,MAHmB,CAGZC,OAHY,CAArB;AAIA,aAAOR,OAAP;AACD,KARI,KAnCiC;;AA+CxCS,YAAQ;AACNN,YAAM,eAAKlB,OAAL,CAAaL,QAAQyB,KAAR,CAAcK,KAA3B,CADA;AAENC,qBAAe;AAFT,KA/CgC;;AAoDxCC,YAAQ,sCAAmBhC,OAAnB,CApDgC;;AAsDxCiC,aAAS,yDACJjC,OADI;AAEPiC,eAAS,CACPjC,QAAQW,GAAR,IAAe,IAAI,sBAAQuB,YAAZ,CAAyB;AACtCC,gBAAS,YAAW/B,QAAQC,OAAR,CAAgB,oBAAhB,CAAsC,sCADpB;AAEtC+B,aAAK,IAFiC;AAGtCC,mBAAW,KAH2B;AAItCC,iBAAS;AAJ6B,OAAzB,CADR,EAOP,GAAGtC,QAAQiC,OAPJ;AAFF;AAtD+B,GAA3B;AAAA,C","file":"createNodeWebpackConfig.js","sourcesContent":["// const fs = require('fs');\nimport path from 'path';\nimport nodeExternals from 'webpack-node-externals';\nimport {\n  webpack,\n  createModuleConfig,\n  createPluginsConfig,\n  createResolveConfig,\n  type OptionsType,\n} from 'pobpack-utils/src';\n\nexport default (options: OptionsType) => ({\n  // Target node\n  target: 'node',\n\n  // don't bundle node_modules dependencies\n  externals: nodeExternals({\n    whitelist: [require.resolve('../hot'), ...options.externalWhitelist],\n  }),\n\n  // __dirname and __filename\n  node: {\n    __filename: true,\n    __dirname: true,\n  },\n\n  // use cache\n  cache: options.hmr,\n\n  // bundle size is not relevant for node\n  performance: {\n    hints: false,\n  },\n\n  resolveLoader: {\n    modules: options.resolveLoaderModules || ['node_modules'],\n  },\n\n  resolve: createResolveConfig(['node'], {\n    ...options,\n    babel: {\n      presets: [require.resolve('./babel')],\n      ...options.babel,\n    },\n  }),\n\n  entry: options.entries.reduce(\n    (entries, entry) => {\n      if (typeof entry === 'string') entry = { key: entry, path: entry };\n      entries[entry.key] = [\n        options.hmr && require.resolve('../hot'),\n        path.join(path.resolve(options.paths.src), entry.path),\n      ].filter(Boolean);\n      return entries;\n    },\n    {},\n  ),\n\n  output: {\n    path: path.resolve(options.paths.build),\n    libraryTarget: 'commonjs2',\n  },\n\n  module: createModuleConfig(options),\n\n  plugins: createPluginsConfig({\n    ...options,\n    plugins: [\n      options.hmr && new webpack.BannerPlugin({\n        banner: `require(\"${require.resolve('source-map-support')}\").install({ environment: \"node\" });`,\n        raw: true,\n        entryOnly: false,\n        include: /\\.js$/,\n      }),\n      ...options.plugins,\n    ],\n  }),\n});\n"]}