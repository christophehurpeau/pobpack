{"version":3,"sources":["../src/index.js"],"names":["buildThrowOnError","stats","hasErrors","Error","toString","hash","timings","chunks","chunkModules","modules","children","version","cached","cachedAssets","reasons","source","errorDetails","colors","process","stdout","isTTY","createCompiler","options","webpackConfig","compiler","bar","incomplete","total","width","clear","stream","apply","percentage","msg","clearLine","cursorTo","update","clearConsole","clean","output","path","run","done","then","watch","callback","err","build","hmr","undefined","watchAndRun","daemon","key","displayName","args","autorestart","start","on","stop","sendSIGUSR2"],"mappings":"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","file":"index.js","sourcesContent":["import { execSync } from 'child_process';\nimport readline from 'readline';\nimport { join } from 'path';\nimport promiseCallback from 'promise-callback-factory/src';\nimport ProgressBar from 'progress';\nimport webpack from 'webpack';\nimport ProgressPlugin from 'webpack/lib/ProgressPlugin';\nimport FriendlyErrorsWebpackPlugin from 'friendly-errors-webpack-plugin';\nimport createDaemon from 'springbokjs-daemon/src';\nimport createWebpackConfig from './createAppWebpackConfig';\n\nconst buildThrowOnError = (stats) => {\n  if (!stats.hasErrors()) {\n    return stats;\n  }\n\n  throw new Error(stats.toString({\n    hash: false,\n    timings: false,\n    chunks: false,\n    chunkModules: false,\n    modules: false,\n    children: true,\n    version: true,\n    cached: false,\n    cachedAssets: false,\n    reasons: false,\n    source: false,\n    errorDetails: false,\n    colors: process.stdout.isTTY,\n  }));\n};\n\nexport const createCompiler = (options) => {\n  const webpackConfig = createWebpackConfig(options);\n\n  const compiler = webpack(webpackConfig);\n\n  if (process.stdout.isTTY) {\n    const bar = new ProgressBar(\n      'Building node bundle... :percent [:bar]',\n      { incomplete: ' ', total: 60, width: 50, clear: true, stream: process.stdout },\n    );\n    compiler.apply(new ProgressPlugin((percentage, msg) => {\n      if (percentage === 1) {\n        readline.clearLine(process.stdout);\n        readline.cursorTo(process.stdout, 0);\n      } else {\n        bar.update(percentage, { msg });\n      }\n    }));\n    // human-readable error messages\n    compiler.apply(new FriendlyErrorsWebpackPlugin({\n      clearConsole: false,\n    }));\n  }\n\n  return {\n    webpackConfig,\n    clean: () => webpackConfig.output.path && execSync(`rm -Rf ${webpackConfig.output.path}`),\n    run: () => promiseCallback(done => compiler.run(done)).then(buildThrowOnError),\n    watch: (callback) => compiler.watch({}, (err, stats) => {\n      if (err) return;\n      buildThrowOnError(stats);\n      callback(stats);\n    }),\n  };\n};\n\nexport const build = (options) => {\n  const compiler = createCompiler({ ...options, hmr: false });\n  compiler.clean();\n  return compiler.run();\n};\n\nexport const watch = (options, callback) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  const compiler = createCompiler({ ...options, hmr: true });\n  compiler.clean();\n  compiler.watch(callback);\n  return compiler;\n};\n\nexport const watchAndRun = (options = {}) => {\n  let daemon;\n  const compiler = watch(options, (stats) => {\n    if (!daemon) {\n      daemon = createDaemon({\n        key: options.key || 'pobpack-node',\n        displayName: options.displayName,\n        args: [join(compiler.webpackConfig.output.path)],\n        autorestart: true,\n      });\n      daemon.start();\n      process.on('exit', () => daemon.stop());\n    } else {\n      // already started, send a signal to ask hot reload\n      daemon.sendSIGUSR2();\n    }\n  });\n};\n"]}