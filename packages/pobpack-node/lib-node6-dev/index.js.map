{"version":3,"sources":["../src/index.js"],"names":["builtRejectOnError","stats","hasErrors","Error","toString","hash","timings","chunks","chunkModules","modules","children","version","cached","cachedAssets","reasons","source","errorDetails","colors","createCompiler","options","webpackConfig","env","process","NODE_ENV","compiler","stdout","isTTY","bar","incomplete","total","width","clear","stream","apply","percentage","msg","clearLine","cursorTo","update","clearConsole","clean","output","path","run","done","then","watch","callback","err","build","hmr","undefined"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,qBAAsBC,KAAD,IAAW;AACpC,MAAIA,MAAMC,SAAN,EAAJ,EAAuB;AACrB,UAAM,IAAIC,KAAJ,CAAUF,MAAMG,QAAN,CAAe;AAC7BC,YAAM,KADuB;AAE7BC,eAAS,KAFoB;AAG7BC,cAAQ,KAHqB;AAI7BC,oBAAc,KAJe;AAK7BC,eAAS,KALoB;AAM7BC,gBAAU,IANmB;AAO7BC,eAAS,IAPoB;AAQ7BC,cAAQ,KARqB;AAS7BC,oBAAc,KATe;AAU7BC,eAAS,KAVoB;AAW7BC,cAAQ,KAXqB;AAY7BC,oBAAc,KAZe;AAa7BC,cAAQ;AAbqB,KAAf,CAAV,CAAN;AAeD;;AAED,SAAOhB,KAAP;AACD,CApBD;;AAsBO,MAAMiB,0CAAkBC,OAAD,IAAa;AACzC,QAAMC,gBAAgB;AACpBC,SAAKC,QAAQD,GAAR,CAAYE;AADG,KAEjBJ,OAFiB,EAAtB;;AAKA,QAAMK,WAAW,uBAAQJ,aAAR,CAAjB;;AAEA,MAAIE,QAAQG,MAAR,CAAeC,KAAnB,EAA0B;AACxB,UAAMC,MAAM,uBACV,2CADU,EAEV,EAAEC,YAAY,GAAd,EAAmBC,OAAO,EAA1B,EAA8BC,OAAO,EAArC,EAAyCC,OAAO,IAAhD,EAAsDC,QAAQV,QAAQG,MAAtE,EAFU,CAAZ;AAIAD,aAASS,KAAT,CAAe,6BAAmB,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACrD,UAAID,eAAe,CAAnB,EAAsB;AACpB,2BAASE,SAAT,CAAmBd,QAAQG,MAA3B;AACA,2BAASY,QAAT,CAAkBf,QAAQG,MAA1B,EAAkC,CAAlC;AACD,OAHD,MAGO;AACLE,YAAIW,MAAJ,CAAWJ,UAAX,EAAuB,EAAEC,GAAF,EAAvB;AACD;AACF,KAPc,CAAf;AAQA;AACAX,aAASS,KAAT,CAAe,0CAAgC;AAC7CM,oBAAc;AAD+B,KAAhC,CAAf;AAGD;;AAED,SAAO;AACLC,WAAO,MAAMpB,cAAcqB,MAAd,CAAqBC,IAArB,IAA6B,6BAAU,UAAStB,cAAcqB,MAAd,CAAqBC,IAAK,EAA7C,CADrC;AAELC,SAAK,MAAM,sCAAgBC,QAAQpB,SAASmB,GAAT,CAAaC,IAAb,CAAxB,EAA4CC,IAA5C,CAAiD7C,kBAAjD,CAFN;AAGL8C,WAAQC,QAAD,IAAcvB,SAASsB,KAAT,KAAmB,CAACE,GAAD,EAAM/C,KAAN,KAAgB;AACtD,UAAI+C,GAAJ,EAAS;AACThD,yBAAmBC,KAAnB;AACA8C,eAAS9C,KAAT;AACD,KAJoB;AAHhB,GAAP;AASD,CApCM;;AAsCA,MAAMgD,wBAAS9B,OAAD,IAAa;AAChC,QAAMK,WAAWN,4BAAoBC,OAApB,IAA6B+B,KAAK,KAAlC,IAAjB;AACA1B,WAASgB,KAAT;AACA,SAAOhB,SAASmB,GAAT,EAAP;AACD,CAJM;;AAMA,MAAMG,wBAAQ,CAAC3B,OAAD,EAAU4B,QAAV,KAAuB;AAC1C,MAAI,OAAO5B,OAAP,KAAmB,UAAvB,EAAmC;AACjC4B,eAAW5B,OAAX;AACAA,cAAUgC,SAAV;AACD;AACD,QAAM3B,WAAWN,4BAAoBC,OAApB,IAA6B+B,KAAK,IAAlC,IAAjB;AACA1B,WAASgB,KAAT;AACAhB,WAASsB,KAAT,CAAeC,QAAf;AACD,CARM","file":"index.js","sourcesContent":["import readline from 'readline';\nimport { execSync } from 'child_process';\nimport promiseCallback from 'promise-callback-factory/src';\nimport ProgressBar from 'progress';\nimport webpack from 'webpack';\nimport ProgressPlugin from 'webpack/lib/ProgressPlugin';\nimport FriendlyErrorsWebpackPlugin from 'friendly-errors-webpack-plugin';\nimport createWebpackConfig from './createAppWebpackConfig';\n\nconst builtRejectOnError = (stats) => {\n  if (stats.hasErrors()) {\n    throw new Error(stats.toString({\n      hash: false,\n      timings: false,\n      chunks: false,\n      chunkModules: false,\n      modules: false,\n      children: true,\n      version: true,\n      cached: false,\n      cachedAssets: false,\n      reasons: false,\n      source: false,\n      errorDetails: false,\n      colors: true,\n    }));\n  }\n\n  return stats;\n};\n\nexport const createCompiler = (options) => {\n  const webpackConfig = createWebpackConfig({\n    env: process.env.NODE_ENV,\n    ...options,\n  });\n\n  const compiler = webpack(webpackConfig);\n\n  if (process.stdout.isTTY) {\n    const bar = new ProgressBar(\n      'Building server bundle... :percent [:bar]',\n      { incomplete: ' ', total: 60, width: 50, clear: true, stream: process.stdout },\n    );\n    compiler.apply(new ProgressPlugin((percentage, msg) => {\n      if (percentage === 1) {\n        readline.clearLine(process.stdout);\n        readline.cursorTo(process.stdout, 0);\n      } else {\n        bar.update(percentage, { msg });\n      }\n    }));\n    // human-readable error messages\n    compiler.apply(new FriendlyErrorsWebpackPlugin({\n      clearConsole: false,\n    }));\n  }\n\n  return {\n    clean: () => webpackConfig.output.path && execSync(`rm -Rf ${webpackConfig.output.path}`),\n    run: () => promiseCallback(done => compiler.run(done)).then(builtRejectOnError),\n    watch: (callback) => compiler.watch({}, (err, stats) => {\n      if (err) return;\n      builtRejectOnError(stats);\n      callback(stats);\n    }),\n  };\n};\n\nexport const build = (options) => {\n  const compiler = createCompiler({ ...options, hmr: false });\n  compiler.clean();\n  return compiler.run();\n};\n\nexport const watch = (options, callback) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  const compiler = createCompiler({ ...options, hmr: true });\n  compiler.clean();\n  compiler.watch(callback);\n};\n"]}