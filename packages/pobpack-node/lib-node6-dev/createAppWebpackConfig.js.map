{"version":3,"sources":["../src/createAppWebpackConfig.js"],"names":["module","exports","options","appWebpackConfigPath","resolve","console","log","appWebpackConfigCreator","require","error","config"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAkBC,OAAD,IAAa;AAC5B,QAAMC,uBAAuB,eAAKC,OAAL,CAAa,wBAAb,CAA7B;AACA,MAAID,oBAAJ,EAA0B;AACxBE,YAAQC,GAAR,CAAY,kCAAZ;AACA;AACA,UAAMC,0BAA0BC,QAAQL,oBAAR,CAAhC;AACA,QAAI,OAAOI,uBAAP,KAAmC,UAAvC,EAAmD;AACjDF,cAAQI,KAAR;AAID;;AAED,UAAMC,SAASH,uDAAuCL,OAAvC,CAAf;;AAEA,QAAI,OAAOQ,MAAP,KAAkB,QAAtB,EAAgC;AAC9BL,cAAQI,KAAR;AAID;;AAED,WAAOC,MAAP;AACD,GArBD,MAqBO;AACL,WAAO,mCAAcR,OAAd,CAAP;AACD;AACF,CA1BD","file":"createAppWebpackConfig.js","sourcesContent":["import path from 'path';\nimport webpackConfig from './createWebpackConfig';\n\nmodule.exports = (options) => {\n  const appWebpackConfigPath = path.resolve('createWebpackConfig.js');\n  if (appWebpackConfigPath) {\n    console.log('Using app createWebpackConfig.js');\n    // eslint-disable-next-line import/no-dynamic-require, global-require\n    const appWebpackConfigCreator = require(appWebpackConfigPath);\n    if (typeof appWebpackConfigCreator !== 'function') {\n      console.error(\n        'app createWebpackConfig.js should export a function\\n'\n        + 'module.exports = function (config, options) { ... }'\n      );\n    }\n\n    const config = appWebpackConfigCreator(webpackConfig, options);\n\n    if (typeof config !== 'object') {\n      console.error(\n        'app createWebpackConfig.js should return the config\\n'\n        + 'function (config, options) { return config; }'\n      );\n    }\n\n    return config;\n  } else {\n    return webpackConfig(options);\n  }\n};\n"]}