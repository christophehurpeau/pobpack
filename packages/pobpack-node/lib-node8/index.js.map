{"version":3,"sources":["../src/index.js"],"names":["createAppNodeCompiler","options","build","compiler","hmr","clean","run","watch","callback","undefined","watchAndRunCompiler","daemon","key","displayName","cwd","args","webpackConfig","output","path","start","process","on","stop","sendSIGUSR2","err","restart","watchAndRun"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;AAMA;;;;;;AAEO,MAAMA,wDAAyBC,OAAD,IACnC,yCAAsB,MAAtB,EAA8B,6EAAgDA,OAAhD,CAA9B,CADK;;AAGA,MAAMC,wBAAQ,CAACD,YAAD,KAAkB;AACrC,QAAME,WAAWH,sBAAsB,EAAE,GAAGC,OAAL,EAAcG,KAAK,KAAnB,EAAtB,CAAjB;AACAD,WAASE,KAAT;AACA,SAAOF,SAASG,GAAT,EAAP;AACD,CAJM;;AAMA,MAAMC,wBAAQ,CAACN,OAAD,EAAUO,QAAV,KAA0C;AAC7D,MAAI,OAAOP,OAAP,KAAmB,UAAvB,EAAmC;AACjCO,eAAWP,OAAX;AACAA,cAAUQ,SAAV;AACD;AACD,QAAMN,WAAWH,sBAAsB,EAAE,GAAGC,OAAL,EAAcG,KAAK,IAAnB,EAAtB,CAAjB;AACAD,WAASE,KAAT;AACAF,WAASI,KAAT,CAAeC,QAAf;AACA,SAAOL,QAAP;AACD,CATM;;AAkBA,MAAMO,oDAAsB,CAACP,QAAD,EAAgCF,YAAhC,KAA6D;AAC9F,MAAIU,MAAJ;AACA,SAAOR,SAASI,KAAT,CAAe,MAAS;AAC7B,QAAI,CAACI,MAAL,EAAa;AACXA,eAAS,iCAAa;AACpBC,aAAKX,QAAQW,GAAR,IAAe,cADA;AAEpBC,qBAAaZ,QAAQY,WAFD;AAGpBC,aAAKb,QAAQa,GAHO;AAIpBC,cAAM,CAAC,gBAAKZ,SAASa,aAAT,CAAuBC,MAAvB,CAA8BC,IAAnC,CAAD,EAA2C,IAAIjB,QAAQc,IAAR,MAAJ,CAA3C;AACN;AALoB,OAAb,CAAT;AAOAJ,aAAOQ,KAAP;AACAC,cAAQC,EAAR,CAAW,MAAX,EAAmB,MAAMV,OAAOW,IAAP,EAAzB;AACD,KAVD,MAUO;AACL;AACA,UAAI;AACFX,eAAOY,WAAP;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZb,eAAOc,OAAP;AACD;AACF;AACF,GAnBM,CAAP;AAoBD,CAtBM;;AAwBA,MAAMC,oCAAczB,WAAW;AACpC,QAAME,WAAWH,sBAAsB,EAAE,GAAGC,OAAL,EAAcG,KAAK,IAAnB,EAAtB,CAAjB;AACAD,WAASE,KAAT;AACAK,sBAAoBP,QAApB;AACA,SAAOA,QAAP;AACD,CALM","file":"index.js","sourcesContent":["import { join } from 'path';\nimport createDaemon from 'springbokjs-daemon/src';\nimport {\n  createPobpackCompiler,\n  createAppWebpackConfig,\n  type PobpackCompilerType,\n  type WatchCallbackType,\n} from 'pobpack-utils';\nimport createNodeWebpackConfig from './createNodeWebpackConfig';\n\nexport const createAppNodeCompiler = (options): PobpackCompilerType =>\n  createPobpackCompiler('node', createAppWebpackConfig(createNodeWebpackConfig)(options));\n\nexport const build = (options = {}) => {\n  const compiler = createAppNodeCompiler({ ...options, hmr: false });\n  compiler.clean();\n  return compiler.run();\n};\n\nexport const watch = (options, callback: WatchCallbackType) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  const compiler = createAppNodeCompiler({ ...options, hmr: true });\n  compiler.clean();\n  compiler.watch(callback);\n  return compiler;\n};\n\ntype RunOptions = {|\n  key: ?string,\n  displayName: ?string,\n  args: ?Array<string | number>,\n  cwd: ?string,\n|};\n\nexport const watchAndRunCompiler = (compiler: PobpackCompilerType, options: RunOptions = {}) => {\n  let daemon;\n  return compiler.watch(stats => {\n    if (!daemon) {\n      daemon = createDaemon({\n        key: options.key || 'pobpack-node',\n        displayName: options.displayName,\n        cwd: options.cwd,\n        args: [join(compiler.webpackConfig.output.path), ...(options.args || [])],\n        // autoRestart: true,\n      });\n      daemon.start();\n      process.on('exit', () => daemon.stop());\n    } else {\n      // already started, send a signal to ask hot reload\n      try {\n        daemon.sendSIGUSR2();\n      } catch (err) {\n        daemon.restart();\n      }\n    }\n  });\n};\n\nexport const watchAndRun = options => {\n  const compiler = createAppNodeCompiler({ ...options, hmr: true });\n  compiler.clean();\n  watchAndRunCompiler(compiler);\n  return compiler;\n};\n"]}