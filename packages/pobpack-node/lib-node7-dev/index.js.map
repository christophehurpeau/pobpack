{"version":3,"sources":["../src/index.js"],"names":["createAppNodeCompiler","options","build","compiler","hmr","clean","run","watch","callback","undefined","watchAndRunCompiler","daemon","key","displayName","cwd","args","webpackConfig","output","path","start","process","on","stop","sendSIGUSR2","err","restart","watchAndRun"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;AAMA;;;;;;;;;;;;;;AAEO,MAAMA,wDAAyBC,OAAD;AAAA,mDAAW,8CAAX;;AAAA,4BACnC,yCAAsB,MAAtB,EAA8B,6EAAgDA,OAAhD,CAA9B,CADmC;AAAA,CAA9B;;AAIA,MAAMC,wBAAQ,CAACD,YAAD,KAAkB;AACrC,QAAME,WAAWH,wCAA2BC,OAA3B,IAAoCG,KAAK,KAAzC,IAAjB;AACAD,WAASE,KAAT;AACA,SAAOF,SAASG,GAAT,EAAP;AACD,CAJM;;AAMA,MAAMC,wBAAQ,CAACN,OAAD,EAAUO,QAAV,KAA0C;AAAA,sBAAxB,4CAAwB;;AAAA;;AAC7D,MAAI,OAAOP,OAAP,KAAmB,UAAvB,EAAmC;AACjCO,oCAAWP,OAAX;AACAA,cAAUQ,SAAV;AACD;AACD,QAAMN,WAAWH,wCAA2BC,OAA3B,IAAoCG,KAAK,IAAzC,IAAjB;AACAD,WAASE,KAAT;AACAF,WAASI,KAAT,CAAeC,QAAf;AACA,SAAOL,QAAP;AACD,CATM;;AAYP,4DAAkB,kCAChB,sCAAK,+BAAC,8BAAD,CAAL,CADgB,EAEhB,8CAAa,+BAAC,8BAAD,CAAb,CAFgB,EAGhB,uCAAM,+BAAC,4BAAM,4DAAO,8BAAP,CAAN,CAAD,CAAN,CAHgB,EAIhB,sCAAK,+BAAC,8BAAD,CAAL,CAJgB,CAAlB;;AAOO,MAAMO,oDAAsB,CAACP,QAAD,EAAgCF,YAAhC,KAA6D;AAAA,sBAApD,8CAAoD;;AAAA;;AAAA,yCAAtB,UAAsB;;AAC9F,MAAIU,MAAJ;AACA,SAAOR,SAASI,KAAT,CAAe,MAAW;AAC/B,QAAI,CAACI,MAAL,EAAa;AACXA,eAAS,iCAAa;AACpBC,aAAKX,QAAQW,GAAR,IAAe,cADA;AAEpBC,qBAAaZ,QAAQY,WAFD;AAGpBC,aAAKb,QAAQa,GAHO;AAIpBC,cAAM,CACJ,gBAAKZ,SAASa,aAAT,CAAuBC,MAAvB,CAA8BC,IAAnC,CADI,EAEJ,IAAIjB,QAAQc,IAAR,MAAJ,CAFI;AAJc,OAAb,CAAT;AAUAJ,aAAOQ,KAAP;AACAC,cAAQC,EAAR,CAAW,MAAX,EAAmB,MAAMV,OAAOW,IAAP,EAAzB;AACD,KAbD,MAaO;AACL;AACA,UAAI;AACFX,eAAOY,WAAP;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZb,eAAOc,OAAP;AACD;AACF;AACF,GAtBM,CAAP;AAuBD,CAzBM;;AA2BA,MAAMC,oCAAezB,OAAD,IAAa;AACtC,QAAME,WAAWH,wCAA2BC,OAA3B,IAAoCG,KAAK,IAAzC,IAAjB;AACAD,WAASE,KAAT;AACAK,sBAAoBP,QAApB;AACA,SAAOA,QAAP;AACD,CALM","file":"index.js","sourcesContent":["import { join } from 'path';\nimport createDaemon from 'springbokjs-daemon/src';\nimport {\n  createPobpackCompiler,\n  createAppWebpackConfig,\n  type PobpackCompilerType,\n  type WatchCallbackType,\n} from 'pobpack-utils';\nimport createNodeWebpackConfig from './createNodeWebpackConfig';\n\nexport const createAppNodeCompiler = (options): PobpackCompilerType => (\n  createPobpackCompiler('node', createAppWebpackConfig(createNodeWebpackConfig)(options))\n);\n\nexport const build = (options = {}) => {\n  const compiler = createAppNodeCompiler({ ...options, hmr: false });\n  compiler.clean();\n  return compiler.run();\n};\n\nexport const watch = (options, callback: WatchCallbackType) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  const compiler = createAppNodeCompiler({ ...options, hmr: true });\n  compiler.clean();\n  compiler.watch(callback);\n  return compiler;\n};\n\n\ntype RunOptions = {|\n  key: ?string,\n  displayName: ?string,\n  args: ?Array<string|number>,\n  cwd: ?string,\n|};\n\nexport const watchAndRunCompiler = (compiler: PobpackCompilerType, options: RunOptions = {}) => {\n  let daemon;\n  return compiler.watch((stats) => {\n    if (!daemon) {\n      daemon = createDaemon({\n        key: options.key || 'pobpack-node',\n        displayName: options.displayName,\n        cwd: options.cwd,\n        args: [\n          join(compiler.webpackConfig.output.path),\n          ...(options.args || []),\n        ],\n        // autoRestart: true,\n      });\n      daemon.start();\n      process.on('exit', () => daemon.stop());\n    } else {\n      // already started, send a signal to ask hot reload\n      try {\n        daemon.sendSIGUSR2();\n      } catch (err) {\n        daemon.restart();\n      }\n    }\n  });\n};\n\nexport const watchAndRun = (options) => {\n  const compiler = createAppNodeCompiler({ ...options, hmr: true });\n  compiler.clean();\n  watchAndRunCompiler(compiler);\n  return compiler;\n};\n"]}