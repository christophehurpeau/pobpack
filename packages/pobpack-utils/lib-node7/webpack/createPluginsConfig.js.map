{"version":3,"sources":["../../src/webpack/createPluginsConfig.js"],"names":["options","prependPlugins","env","DefinePlugin","JSON","stringify","NoEmitOnErrorsPlugin","hmr","HotModuleReplacementPlugin","NamedModulesPlugin","plugins","filter","Boolean"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;kBAEgBA,OAAD,IAA0B,CACvC,GAAGA,QAAQC,cAD4B;;AAGvC;AACA;AACA;AACAD,QAAQE,GAAR,KAAgB,YAAhB,IAAgC,+CANO,EAQvC,IAAI,kBAAQC,YAAZ,CAAyB;AACvB,0BAAwBC,KAAKC,SAAL,CAAeL,QAAQE,GAAvB;AADD,CAAzB,CARuC,EAYvC,IAAI,kBAAQI,oBAAZ,EAZuC,EAcvCN,QAAQO,GAAR,IAAe,IAAI,kBAAQC,0BAAZ,EAdwB,EAevCR,QAAQO,GAAR,IAAe,IAAI,kBAAQE,kBAAZ,EAfwB,EAgBvC,GAAGT,QAAQU,OAhB4B,EAiBvCC,MAjBuC,CAiBhCC,OAjBgC,C","file":"createPluginsConfig.js","sourcesContent":["import webpack from 'webpack';\nimport CaseSensitivePathsPlugin from 'case-sensitive-paths-webpack-plugin';\nimport { type OptionsType } from '../createOptions';\n\nexport default (options: OptionsType) => [\n  ...options.prependPlugins,\n\n  // enforces the entire path of all required modules match the exact case\n  // of the actual path on disk. Using this plugin helps alleviate cases\n  // for developers working on case insensitive systems like OSX.\n  options.env !== 'production' && new CaseSensitivePathsPlugin(),\n\n  new webpack.DefinePlugin({\n    'process.env.NODE_ENV': JSON.stringify(options.env),\n  }),\n\n  new webpack.NoEmitOnErrorsPlugin(),\n\n  options.hmr && new webpack.HotModuleReplacementPlugin(),\n  options.hmr && new webpack.NamedModulesPlugin(),\n  ...options.plugins,\n].filter(Boolean);\n"]}