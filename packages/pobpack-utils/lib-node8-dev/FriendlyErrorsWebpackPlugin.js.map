{"version":3,"sources":["../src/FriendlyErrorsWebpackPlugin.js"],"names":["key","handler","INFO","logger","isSuccessful","messages","errors","length","warnings","FriendlyErrorsWebpackPlugin","constructor","options","Object","assign","context","bundleName","apply","compiler","plugin","info","stats","toJson","success","env","successMessage","console","log","critical","forEach","message"],"mappings":";;;;;;;mEAAA;;AAEA;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,8DAAmB,kCACjB,6CAAY,8BAAZ,CADiB,EAEjB,iDAAgB,+BAAC,8BAAD,CAAhB,CAFiB,CAAnB;;AAKA,4BAAU,EAAEA,KAAK,eAAP,EAAwBC,SAAS,iCAAmB,oBAAOC,IAA1B,CAAjC,EAAV,C;;AACA,MAAMC,SAAS,gCAAW,eAAX,EAA4B,SAA5B,CAAf;AACA,MAAMC,eAAeC,YAAY,CAACA,SAASC,MAAT,CAAgBC,MAAjB,IAA2B,CAACF,SAASG,QAAT,CAAkBD,MAA/E;;IAEqBE,2B,0CACT,8B,0CACI,+BAAG,8BAAH,C,YAFD,MAAkC;;AAI/CC,cAAYC,OAAZ,EAAmC;AAAA;;AAAA,uBAAhB,+BAAG,WAAH,CAAgB;;AAAA,0EACjCC,OAAOC,MAAP,CAAc,IAAd,EAAoBF,OAApB,CADiC,EAEjC,KAAKR,MAAL,GAAcA,OAAOW,OAAP,CAAe,EAAEC,YAAYJ,QAAQI,UAAtB,EAAf,CAFmB;AAGlC;;AAEDC,QAAMC,QAAN,EAAgB;AAEdA,aAASC,MAAT,CAAgB,SAAhB,EAA2B,MAAM;AAC/B,WAAKf,MAAL,CAAYgB,IAAZ,CAAiB,cAAjB,CAD+B;AAEhC,KAFD,CAFc,EAOdF,SAASC,MAAT,CAAgB,MAAhB,EAAwBE,SAAS;AAC/B;AACA,YAAMf,WAAWe,MAAMC,MAAN,KAAiB,IAAjB,CAAjB;;AAF+B,aAI3BjB,aAAaC,QAAb,CAJ2B,IAK7B,KAAKF,MAAL,CAAYmB,OAAZ,CAAoB,wBAApB,EAA8C,EAAEC,KAAK,KAAKA,GAAZ,EAA9C,CAL6B,QAMzB,KAAKC,cANoB,IAO3BC,QAAQC,GAAR,CAAY,KAAKF,cAAjB,CAP2B,KAY3BnB,SAASC,MAAT,CAAgBC,MAZW,IAa7B,KAAKJ,MAAL,CAAYwB,QAAZ,CAAqB,oBAArB,CAb6B,EAc7BF,QAAQC,GAAR,EAd6B,OAe7BrB,SAASC,MAAT,CAAgBsB,OAAhB,CAAwBC,WAAW;AACjCJ,gBAAQC,GAAR,CAAYG,OAAZ,CADiC,EAEjCJ,QAAQC,GAAR,EAFiC;AAGlC,OAHD,CAf6B,UAsB3BrB,SAASG,QAAT,CAAkBD,MAtBS,KAuB7B,KAAKJ,MAAL,CAAYwB,QAAZ,CAAqB,yBAArB,CAvB6B,EAwB7BF,QAAQC,GAAR,EAxB6B,EAyB7BrB,SAASG,QAAT,CAAkBoB,OAAlB,CAA0BC,WAAW;AACnCJ,gBAAQC,GAAR,CAAYG,OAAZ,CADmC,EAEnCJ,QAAQC,GAAR,EAFmC;AAGpC,OAHD,CAzB6B;AA8BhC,KA9BD,CAPc;AAsCf;AA/C8C,C;;;;;;;kBAA5BjB,2B","file":"FriendlyErrorsWebpackPlugin.js","sourcesContent":["/* eslint-disable no-console */\n\nimport { addConfig, levels } from 'nightingale/src';\nimport Logger from 'nightingale-logger/src';\nimport ConsoleHandler from 'nightingale-console/src';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\n\ntype OptionsType = {|\n  bundleName: string,\n  successMessage: ?string,\n|};\n\naddConfig({ key: 'pobpack-utils', handler: new ConsoleHandler(levels.INFO) });\nconst logger = new Logger('pobpack-utils', 'pobpack');\nconst isSuccessful = messages => !messages.errors.length && !messages.warnings.length;\n\nexport default class FriendlyErrorsWebpackPlugin {\n  bundleName: string;\n  successMessage: ?string;\n\n  constructor(options: ?OptionsType) {\n    Object.assign(this, options);\n    this.logger = logger.context({ bundleName: options.bundleName });\n  }\n\n  apply(compiler) {\n    // webpack is recompiling\n    compiler.plugin('invalid', () => {\n      this.logger.info('Compiling...');\n    });\n\n    // compilation done\n    compiler.plugin('done', stats => {\n      // const messages = formatWebpackMessages(stats.toJson({}, true));\n      const messages = stats.toJson({}, true);\n\n      if (isSuccessful(messages)) {\n        this.logger.success('Compiled successfully!', { env: this.env });\n        if (this.successMessage) {\n          console.log(this.successMessage);\n        }\n        return;\n      }\n\n      if (messages.errors.length) {\n        this.logger.critical('Failed to compile.');\n        console.log();\n        messages.errors.forEach(message => {\n          console.log(message);\n          console.log();\n        });\n        return;\n      }\n\n      if (messages.warnings.length) {\n        this.logger.critical('Compiled with warnings.');\n        console.log();\n        messages.warnings.forEach(message => {\n          console.log(message);\n          console.log();\n        });\n      }\n    });\n  }\n}\n"]}