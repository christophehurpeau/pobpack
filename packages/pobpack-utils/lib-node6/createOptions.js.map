{"version":3,"sources":["../src/createOptions.js"],"names":["options","env","process","NODE_ENV","hmr","resolveLoaderModules","webpackPrefixPackageFields","babel","jsLoaders","moduleRules","plugins","prependPlugins","paths","src","build","entries","externalWhitelist"],"mappings":";;;;;;AAAA;;kBA6BgBA,OAAD,KAAmC;AAChDC,OAAKD,QAAQC,GAAR,IAAeC,QAAQD,GAAR,CAAYE,QADgB;AAEhDC,OAAKJ,QAAQI,GAFmC;AAGhDC,wBAAsBL,QAAQK,oBAHkB;AAIhDC,8BAA4BN,QAAQM,0BAAR,MAJoB;AAKhDC,SAAOP,QAAQO,KALiC;AAMhDC,aAAWR,QAAQQ,SAN6B;AAOhDC,eAAaT,QAAQS,WAP2B;AAQhDC,WAASV,QAAQU,OAAR,MARuC;AAShDC,kBAAgBX,QAAQW,cAAR,MATgC;AAUhDC,yBAASC,KAAK,KAAd,EAAqBC,OAAO,OAA5B,IAAwCd,QAAQY,KAAhD,CAVgD;AAWhDG,WAASf,QAAQe,OAAR,aAXuC;AAYhDC,qBAAmBhB,QAAQgB,iBAAR;AAZ6B,CAAnC,C","file":"createOptions.js","sourcesContent":["/* eslint-disable flowtype/no-weak-types */\n\ntype ConfigPathsType = {|\n  src: string,\n  build: string,\n|};\n\ntype ConfigEntryType = string | {|\n  key: string,\n  path: string,\n|};\n\ntype BabelConfigType = Object;\n\nexport type OptionsType = {|\n  env: ?string,\n  hmr: boolean,\n  resolveLoaderModules: ?Array<string>,\n  webpackPrefixPackageFields: Array<string>,\n  babel: ?BabelConfigType,\n  jsLoaders: ?Array<any>,\n  moduleRules: ?Array<any>,\n  prependPlugins: ?Array<any>,\n  plugins: ?Array<any>,\n  paths: ConfigPathsType,\n  entries: ?Array<ConfigEntryType>,\n  externalWhitelist: ?Array<string | RegExp | Function>,\n|};\n\nexport default (options: Object): OptionsType => ({\n  env: options.env || process.env.NODE_ENV,\n  hmr: options.hmr,\n  resolveLoaderModules: options.resolveLoaderModules,\n  webpackPrefixPackageFields: options.webpackPrefixPackageFields || [],\n  babel: options.babel,\n  jsLoaders: options.jsLoaders,\n  moduleRules: options.moduleRules,\n  plugins: options.plugins || [],\n  prependPlugins: options.prependPlugins || [],\n  paths: { src: 'src', build: 'build', ...options.paths },\n  entries: options.entries || ['index'],\n  externalWhitelist: options.externalWhitelist || [],\n});\n"]}