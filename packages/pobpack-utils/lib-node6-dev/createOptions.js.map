{"version":3,"sources":["../src/createOptions.js"],"names":["options","env","process","NODE_ENV","hmr","resolveLoaderModules","webpackPrefixPackageFields","babel","jsLoaders","moduleRules","plugins","prependPlugins","paths","src","build","entries","includeModules"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,sEAAuB,kCACrB,sCAAK,8BAAL,CADqB,EAErB,wCAAO,8BAAP,CAFqB,CAAvB;;AAKA,sEAAuB,4DAAS,kCAC9B,sCAAK,8BAAL,CAD8B,EAE9B,uCAAM,8BAAN,CAF8B,CAAT,CAAvB;;AAKA,sEAAuB,8BAAvB;;AAEO,oFAAmB,kCACxB,sCAAK,+BAAC,8BAAD,CAAL,CADwB,EAExB,sCAAK,+BAAL,CAFwB,EAGxB,uDAAsB,+BAAC,4BAAM,8BAAN,CAAD,CAAtB,CAHwB,EAIxB,6DAA4B,4BAAM,8BAAN,CAA5B,CAJwB,EAKxB,wCAAO,+BAAC,eAAD,CAAP,CALwB,EAMxB,4CAAW,+BAAC,4BAAM,2BAAN,CAAD,CAAX,CANwB,EAOxB,8CAAa,+BAAC,4BAAM,2BAAN,CAAD,CAAb,CAPwB,EAQxB,iDAAgB,+BAAC,4BAAM,2BAAN,CAAD,CAAhB,CARwB,EASxB,0CAAS,+BAAC,4BAAM,2BAAN,CAAD,CAAT,CATwB,EAUxB,wCAAO,eAAP,CAVwB,EAWxB,0CAAS,+BAAC,4BAAM,eAAN,CAAD,CAAT,CAXwB,EAYxB,iDAAgB,+BAAC,4BAAM,8BAAN,CAAD,CAAhB,CAZwB,CAAnB;;kBAeQ,uBAACA,OAAD;AAAA,qBAAQ,8BAAR;;AAAA,mDAAmB,WAAnB;;AAAA;;AAAA,4BAAmC;AAChDC,SAAKD,QAAQC,GAAR,IAAeC,QAAQD,GAAR,CAAYE,QADgB;AAEhDC,SAAKJ,QAAQI,GAFmC;AAGhDC,0BAAsBL,QAAQK,oBAHkB;AAIhDC,gCAA4BN,QAAQM,0BAAR,MAJoB;AAKhDC,WAAOP,QAAQO,KALiC;AAMhDC,eAAWR,QAAQQ,SAN6B;AAOhDC,iBAAaT,QAAQS,WAP2B;AAQhDC,aAASV,QAAQU,OAAR,MARuC;AAShDC,oBAAgBX,QAAQW,cAAR,MATgC;AAUhDC,2BAASC,KAAK,KAAd,EAAqBC,OAAO,OAA5B,IAAwCd,QAAQY,KAAhD,CAVgD;AAWhDG,aAASf,QAAQe,OAAR,aAXuC;AAYhDC,oBAAgBhB,QAAQgB,cAAR;AAZgC,GAAnC;AAAA,C","file":"createOptions.js","sourcesContent":["/* eslint-disable flowtype/no-weak-types */\n\ntype ConfigPathsType = {|\n  src: string,\n  build: string,\n|};\n\ntype ConfigEntryType = string | {|\n  key: string,\n  path: string,\n|};\n\ntype BabelConfigType = Object;\n\nexport type OptionsType = {|\n  env: ?string,\n  hmr: boolean,\n  resolveLoaderModules: ?Array<string>,\n  webpackPrefixPackageFields: Array<string>,\n  babel: ?BabelConfigType,\n  jsLoaders: ?Array<any>,\n  moduleRules: ?Array<any>,\n  prependPlugins: ?Array<any>,\n  plugins: ?Array<any>,\n  paths: ConfigPathsType,\n  entries: ?Array<ConfigEntryType>,\n  includeModules: ?Array<string>,\n|};\n\nexport default (options: Object): OptionsType => ({\n  env: options.env || process.env.NODE_ENV,\n  hmr: options.hmr,\n  resolveLoaderModules: options.resolveLoaderModules,\n  webpackPrefixPackageFields: options.webpackPrefixPackageFields || [],\n  babel: options.babel,\n  jsLoaders: options.jsLoaders,\n  moduleRules: options.moduleRules,\n  plugins: options.plugins || [],\n  prependPlugins: options.prependPlugins || [],\n  paths: { src: 'src', build: 'build', ...options.paths },\n  entries: options.entries || ['index'],\n  includeModules: options.includeModules || [],\n});\n"]}