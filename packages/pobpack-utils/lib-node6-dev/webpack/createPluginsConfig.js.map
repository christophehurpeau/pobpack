{"version":3,"sources":["../../src/webpack/createPluginsConfig.js"],"names":["options","prependPlugins","env","DefinePlugin","JSON","stringify","defines","NoEmitOnErrorsPlugin","hmr","HotModuleReplacementPlugin","NamedModulesPlugin","plugins","filter","Boolean"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;kBAEe,6BAACA,OAAD;AAAA,qBAAQ,sCAAR;;AAAA;;AAAA,SAA0B,CACvC,GAAGA,QAAQC,cAD4B;;AAGvC;AACA;AACA;AACAD,UAAQE,GAAR,KAAgB,YAAhB,IAAgC,+CANO,EAQvC,IAAI,kBAAQC,YAAZ;AACE,4BAAwBC,KAAKC,SAAL,CAAeL,QAAQE,GAAvB;AAD1B,KAEKF,QAAQM,OAFb,EARuC,EAavC,IAAI,kBAAQC,oBAAZ,EAbuC,EAevCP,QAAQQ,GAAR,IAAe,IAAI,kBAAQC,0BAAZ,EAfwB,EAgBvCT,QAAQQ,GAAR,IAAe,IAAI,kBAAQE,kBAAZ,EAhBwB,EAiBvC,GAAGV,QAAQW,OAjB4B,EAkBvCC,MAlBuC,CAkBhCC,OAlBgC,CAA1B;AAAA,C","file":"createPluginsConfig.js","sourcesContent":["import webpack from 'webpack';\nimport CaseSensitivePathsPlugin from 'case-sensitive-paths-webpack-plugin';\nimport { type OptionsType } from '../createOptions';\n\nexport default (options: OptionsType) => [\n  ...options.prependPlugins,\n\n  // enforces the entire path of all required modules match the exact case\n  // of the actual path on disk. Using this plugin helps alleviate cases\n  // for developers working on case insensitive systems like OSX.\n  options.env !== 'production' && new CaseSensitivePathsPlugin(),\n\n  new webpack.DefinePlugin({\n    'process.env.NODE_ENV': JSON.stringify(options.env),\n    ...options.defines,\n  }),\n\n  new webpack.NoEmitOnErrorsPlugin(),\n\n  options.hmr && new webpack.HotModuleReplacementPlugin(),\n  options.hmr && new webpack.NamedModulesPlugin(),\n  ...options.plugins,\n].filter(Boolean);\n"]}